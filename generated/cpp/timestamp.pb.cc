// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: timestamp.proto
// Protobuf C++ Version: 6.31.1

#include "timestamp.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace timestamp {
namespace v1 {

inline constexpr StreamTimestampsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timezone_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        interval_ms_{0},
        max_count_{0},
        precision_{static_cast< ::timestamp::v1::TimestampPrecision >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR StreamTimestampsRequest::StreamTimestampsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(StreamTimestampsRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StreamTimestampsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamTimestampsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamTimestampsRequestDefaultTypeInternal() {}
  union {
    StreamTimestampsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamTimestampsRequestDefaultTypeInternal _StreamTimestampsRequest_default_instance_;

inline constexpr GetCurrentTimestampRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timezone_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        precision_{static_cast< ::timestamp::v1::TimestampPrecision >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR GetCurrentTimestampRequest::GetCurrentTimestampRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetCurrentTimestampRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetCurrentTimestampRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCurrentTimestampRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCurrentTimestampRequestDefaultTypeInternal() {}
  union {
    GetCurrentTimestampRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCurrentTimestampRequestDefaultTypeInternal _GetCurrentTimestampRequest_default_instance_;

inline constexpr TimestampMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        source_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timezone_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{nullptr},
        precision_{static_cast< ::timestamp::v1::TimestampPrecision >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR TimestampMessage::TimestampMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TimestampMessage_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TimestampMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TimestampMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TimestampMessageDefaultTypeInternal() {}
  union {
    TimestampMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TimestampMessageDefaultTypeInternal _TimestampMessage_default_instance_;

inline constexpr GetCurrentTimestampResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timestamp_message_{nullptr},
        processing_time_ns_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR GetCurrentTimestampResponse::GetCurrentTimestampResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetCurrentTimestampResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetCurrentTimestampResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCurrentTimestampResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCurrentTimestampResponseDefaultTypeInternal() {}
  union {
    GetCurrentTimestampResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCurrentTimestampResponseDefaultTypeInternal _GetCurrentTimestampResponse_default_instance_;
}  // namespace v1
}  // namespace timestamp
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_timestamp_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_timestamp_2eproto = nullptr;
const ::uint32_t
    TableStruct_timestamp_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::timestamp::v1::TimestampMessage, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::timestamp::v1::TimestampMessage, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::timestamp::v1::TimestampMessage, _impl_.source_),
        PROTOBUF_FIELD_OFFSET(::timestamp::v1::TimestampMessage, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::timestamp::v1::TimestampMessage, _impl_.timezone_),
        PROTOBUF_FIELD_OFFSET(::timestamp::v1::TimestampMessage, _impl_.precision_),
        3,
        0,
        1,
        2,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::timestamp::v1::GetCurrentTimestampRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::timestamp::v1::GetCurrentTimestampRequest, _impl_.precision_),
        PROTOBUF_FIELD_OFFSET(::timestamp::v1::GetCurrentTimestampRequest, _impl_.timezone_),
        PROTOBUF_FIELD_OFFSET(::timestamp::v1::GetCurrentTimestampRequest, _impl_.source_),
        2,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::timestamp::v1::GetCurrentTimestampResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::timestamp::v1::GetCurrentTimestampResponse, _impl_.timestamp_message_),
        PROTOBUF_FIELD_OFFSET(::timestamp::v1::GetCurrentTimestampResponse, _impl_.processing_time_ns_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::timestamp::v1::StreamTimestampsRequest, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::timestamp::v1::StreamTimestampsRequest, _impl_.interval_ms_),
        PROTOBUF_FIELD_OFFSET(::timestamp::v1::StreamTimestampsRequest, _impl_.max_count_),
        PROTOBUF_FIELD_OFFSET(::timestamp::v1::StreamTimestampsRequest, _impl_.precision_),
        PROTOBUF_FIELD_OFFSET(::timestamp::v1::StreamTimestampsRequest, _impl_.timezone_),
        PROTOBUF_FIELD_OFFSET(::timestamp::v1::StreamTimestampsRequest, _impl_.source_),
        2,
        3,
        4,
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::timestamp::v1::TimestampMessage)},
        {13, sizeof(::timestamp::v1::GetCurrentTimestampRequest)},
        {22, sizeof(::timestamp::v1::GetCurrentTimestampResponse)},
        {29, sizeof(::timestamp::v1::StreamTimestampsRequest)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::timestamp::v1::_TimestampMessage_default_instance_._instance,
    &::timestamp::v1::_GetCurrentTimestampRequest_default_instance_._instance,
    &::timestamp::v1::_GetCurrentTimestampResponse_default_instance_._instance,
    &::timestamp::v1::_StreamTimestampsRequest_default_instance_._instance,
};
const char descriptor_table_protodef_timestamp_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017timestamp.proto\022\014timestamp.v1\032\037google/"
    "protobuf/timestamp.proto\"\332\001\n\020TimestampMe"
    "ssage\0228\n\ttimestamp\030\001 \001(\0132\032.google.protob"
    "uf.TimestampR\ttimestamp\022\026\n\006source\030\002 \001(\tR"
    "\006source\022\030\n\007message\030\003 \001(\tR\007message\022\032\n\010tim"
    "ezone\030\004 \001(\tR\010timezone\022>\n\tprecision\030\005 \001(\016"
    "2 .timestamp.v1.TimestampPrecisionR\tprec"
    "ision\"\220\001\n\032GetCurrentTimestampRequest\022>\n\t"
    "precision\030\001 \001(\0162 .timestamp.v1.Timestamp"
    "PrecisionR\tprecision\022\032\n\010timezone\030\002 \001(\tR\010"
    "timezone\022\026\n\006source\030\003 \001(\tR\006source\"\230\001\n\033Get"
    "CurrentTimestampResponse\022K\n\021timestamp_me"
    "ssage\030\001 \001(\0132\036.timestamp.v1.TimestampMess"
    "ageR\020timestampMessage\022,\n\022processing_time"
    "_ns\030\002 \001(\003R\020processingTimeNs\"\313\001\n\027StreamTi"
    "mestampsRequest\022\037\n\013interval_ms\030\001 \001(\005R\nin"
    "tervalMs\022\033\n\tmax_count\030\002 \001(\005R\010maxCount\022>\n"
    "\tprecision\030\003 \001(\0162 .timestamp.v1.Timestam"
    "pPrecisionR\tprecision\022\032\n\010timezone\030\004 \001(\tR"
    "\010timezone\022\026\n\006source\030\005 \001(\tR\006source*\313\001\n\022Ti"
    "mestampPrecision\022#\n\037TIMESTAMP_PRECISION_"
    "UNSPECIFIED\020\000\022\037\n\033TIMESTAMP_PRECISION_SEC"
    "ONDS\020\001\022$\n TIMESTAMP_PRECISION_MILLISECON"
    "DS\020\002\022$\n TIMESTAMP_PRECISION_MICROSECONDS"
    "\020\003\022#\n\037TIMESTAMP_PRECISION_NANOSECONDS\020\0042"
    "\333\001\n\020TimestampService\022j\n\023GetCurrentTimest"
    "amp\022(.timestamp.v1.GetCurrentTimestampRe"
    "quest\032).timestamp.v1.GetCurrentTimestamp"
    "Response\022[\n\020StreamTimestamps\022%.timestamp"
    ".v1.StreamTimestampsRequest\032\036.timestamp."
    "v1.TimestampMessage0\001B\255\001\n\020com.timestamp."
    "v1B\016TimestampProtoP\001Z8github.com/timesta"
    "mp-api/gen/go/timestamp/v1;timestampv1\242\002"
    "\003TXX\252\002\014Timestamp.V1\312\002\014Timestamp\\V1\342\002\030Tim"
    "estamp\\V1\\GPBMetadata\352\002\rTimestamp::V1b\006p"
    "roto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_timestamp_2eproto_deps[1] = {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_timestamp_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_timestamp_2eproto = {
    false,
    false,
    1405,
    descriptor_table_protodef_timestamp_2eproto,
    "timestamp.proto",
    &descriptor_table_timestamp_2eproto_once,
    descriptor_table_timestamp_2eproto_deps,
    1,
    4,
    schemas,
    file_default_instances,
    TableStruct_timestamp_2eproto::offsets,
    file_level_enum_descriptors_timestamp_2eproto,
    file_level_service_descriptors_timestamp_2eproto,
};
namespace timestamp {
namespace v1 {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL TimestampPrecision_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_timestamp_2eproto);
  return file_level_enum_descriptors_timestamp_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t TimestampPrecision_internal_data_[] = {
    327680u, 0u, };
// ===================================================================

class TimestampMessage::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TimestampMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TimestampMessage, _impl_._has_bits_);
};

void TimestampMessage::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
TimestampMessage::TimestampMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TimestampMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:timestamp.v1.TimestampMessage)
}
PROTOBUF_NDEBUG_INLINE TimestampMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::timestamp::v1::TimestampMessage& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        source_(arena, from.source_),
        message_(arena, from.message_),
        timezone_(arena, from.timezone_) {}

TimestampMessage::TimestampMessage(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TimestampMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TimestampMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TimestampMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_)
                : nullptr;
  _impl_.precision_ = from._impl_.precision_;

  // @@protoc_insertion_point(copy_constructor:timestamp.v1.TimestampMessage)
}
PROTOBUF_NDEBUG_INLINE TimestampMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        source_(arena),
        message_(arena),
        timezone_(arena) {}

inline void TimestampMessage::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, precision_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::precision_));
}
TimestampMessage::~TimestampMessage() {
  // @@protoc_insertion_point(destructor:timestamp.v1.TimestampMessage)
  SharedDtor(*this);
}
inline void TimestampMessage::SharedDtor(MessageLite& self) {
  TimestampMessage& this_ = static_cast<TimestampMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.source_.Destroy();
  this_._impl_.message_.Destroy();
  this_._impl_.timezone_.Destroy();
  delete this_._impl_.timestamp_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TimestampMessage::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TimestampMessage(arena);
}
constexpr auto TimestampMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TimestampMessage),
                                            alignof(TimestampMessage));
}
constexpr auto TimestampMessage::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TimestampMessage_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TimestampMessage::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TimestampMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TimestampMessage::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TimestampMessage>(), &TimestampMessage::ByteSizeLong,
              &TimestampMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TimestampMessage, _impl_._cached_size_),
          false,
      },
      &TimestampMessage::kDescriptorMethods,
      &descriptor_table_timestamp_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TimestampMessage_class_data_ =
        TimestampMessage::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TimestampMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TimestampMessage_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TimestampMessage_class_data_.tc_table);
  return TimestampMessage_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 59, 2>
TimestampMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TimestampMessage, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TimestampMessage_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::timestamp::v1::TimestampMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
    {::_pbi::TcParser::FastMtS1,
     {10, 3, 0, PROTOBUF_FIELD_OFFSET(TimestampMessage, _impl_.timestamp_)}},
    // string source = 2 [json_name = "source"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(TimestampMessage, _impl_.source_)}},
    // string message = 3 [json_name = "message"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(TimestampMessage, _impl_.message_)}},
    // string timezone = 4 [json_name = "timezone"];
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(TimestampMessage, _impl_.timezone_)}},
    // .timestamp.v1.TimestampPrecision precision = 5 [json_name = "precision"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TimestampMessage, _impl_.precision_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(TimestampMessage, _impl_.precision_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(TimestampMessage, _impl_.timestamp_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string source = 2 [json_name = "source"];
    {PROTOBUF_FIELD_OFFSET(TimestampMessage, _impl_.source_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string message = 3 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(TimestampMessage, _impl_.message_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timezone = 4 [json_name = "timezone"];
    {PROTOBUF_FIELD_OFFSET(TimestampMessage, _impl_.timezone_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .timestamp.v1.TimestampPrecision precision = 5 [json_name = "precision"];
    {PROTOBUF_FIELD_OFFSET(TimestampMessage, _impl_.precision_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }},
  {{
    "\35\0\6\7\10\0\0\0"
    "timestamp.v1.TimestampMessage"
    "source"
    "message"
    "timezone"
  }},
};
PROTOBUF_NOINLINE void TimestampMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:timestamp.v1.TimestampMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.source_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.timezone_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
  }
  _impl_.precision_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TimestampMessage::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TimestampMessage& this_ = static_cast<const TimestampMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TimestampMessage::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TimestampMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:timestamp.v1.TimestampMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
        stream);
  }

  // string source = 2 [json_name = "source"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!this_._internal_source().empty()) {
      const ::std::string& _s = this_._internal_source();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "timestamp.v1.TimestampMessage.source");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string message = 3 [json_name = "message"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "timestamp.v1.TimestampMessage.message");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string timezone = 4 [json_name = "timezone"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (!this_._internal_timezone().empty()) {
      const ::std::string& _s = this_._internal_timezone();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "timestamp.v1.TimestampMessage.timezone");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // .timestamp.v1.TimestampPrecision precision = 5 [json_name = "precision"];
  if ((cached_has_bits & 0x00000010u) != 0) {
    if (this_._internal_precision() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this_._internal_precision(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:timestamp.v1.TimestampMessage)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TimestampMessage::ByteSizeLong(const MessageLite& base) {
  const TimestampMessage& this_ = static_cast<const TimestampMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TimestampMessage::ByteSizeLong() const {
  const TimestampMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:timestamp.v1.TimestampMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // string source = 2 [json_name = "source"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_source().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_source());
      }
    }
    // string message = 3 [json_name = "message"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_message().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message());
      }
    }
    // string timezone = 4 [json_name = "timezone"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_timezone().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_timezone());
      }
    }
    // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
    }
    // .timestamp.v1.TimestampPrecision precision = 5 [json_name = "precision"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_precision() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_precision());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TimestampMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TimestampMessage*>(&to_msg);
  auto& from = static_cast<const TimestampMessage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:timestamp.v1.TimestampMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_source().empty()) {
        _this->_internal_set_source(from._internal_source());
      } else {
        if (_this->_impl_.source_.IsDefault()) {
          _this->_internal_set_source("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_message().empty()) {
        _this->_internal_set_message(from._internal_message());
      } else {
        if (_this->_impl_.message_.IsDefault()) {
          _this->_internal_set_message("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_timezone().empty()) {
        _this->_internal_set_timezone(from._internal_timezone());
      } else {
        if (_this->_impl_.timezone_.IsDefault()) {
          _this->_internal_set_timezone("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
      if (_this->_impl_.timestamp_ == nullptr) {
        _this->_impl_.timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_);
      } else {
        _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_precision() != 0) {
        _this->_impl_.precision_ = from._impl_.precision_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TimestampMessage::CopyFrom(const TimestampMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:timestamp.v1.TimestampMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TimestampMessage::InternalSwap(TimestampMessage* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_, &other->_impl_.source_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timezone_, &other->_impl_.timezone_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TimestampMessage, _impl_.precision_)
      + sizeof(TimestampMessage::_impl_.precision_)
      - PROTOBUF_FIELD_OFFSET(TimestampMessage, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata TimestampMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetCurrentTimestampRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetCurrentTimestampRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetCurrentTimestampRequest, _impl_._has_bits_);
};

GetCurrentTimestampRequest::GetCurrentTimestampRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetCurrentTimestampRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:timestamp.v1.GetCurrentTimestampRequest)
}
PROTOBUF_NDEBUG_INLINE GetCurrentTimestampRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::timestamp::v1::GetCurrentTimestampRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        timezone_(arena, from.timezone_),
        source_(arena, from.source_) {}

GetCurrentTimestampRequest::GetCurrentTimestampRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetCurrentTimestampRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetCurrentTimestampRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetCurrentTimestampRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.precision_ = from._impl_.precision_;

  // @@protoc_insertion_point(copy_constructor:timestamp.v1.GetCurrentTimestampRequest)
}
PROTOBUF_NDEBUG_INLINE GetCurrentTimestampRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        timezone_(arena),
        source_(arena) {}

inline void GetCurrentTimestampRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.precision_ = {};
}
GetCurrentTimestampRequest::~GetCurrentTimestampRequest() {
  // @@protoc_insertion_point(destructor:timestamp.v1.GetCurrentTimestampRequest)
  SharedDtor(*this);
}
inline void GetCurrentTimestampRequest::SharedDtor(MessageLite& self) {
  GetCurrentTimestampRequest& this_ = static_cast<GetCurrentTimestampRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.timezone_.Destroy();
  this_._impl_.source_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetCurrentTimestampRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetCurrentTimestampRequest(arena);
}
constexpr auto GetCurrentTimestampRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetCurrentTimestampRequest),
                                            alignof(GetCurrentTimestampRequest));
}
constexpr auto GetCurrentTimestampRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetCurrentTimestampRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetCurrentTimestampRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetCurrentTimestampRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetCurrentTimestampRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetCurrentTimestampRequest>(), &GetCurrentTimestampRequest::ByteSizeLong,
              &GetCurrentTimestampRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetCurrentTimestampRequest, _impl_._cached_size_),
          false,
      },
      &GetCurrentTimestampRequest::kDescriptorMethods,
      &descriptor_table_timestamp_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetCurrentTimestampRequest_class_data_ =
        GetCurrentTimestampRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetCurrentTimestampRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetCurrentTimestampRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetCurrentTimestampRequest_class_data_.tc_table);
  return GetCurrentTimestampRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 62, 2>
GetCurrentTimestampRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetCurrentTimestampRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetCurrentTimestampRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::timestamp::v1::GetCurrentTimestampRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .timestamp.v1.TimestampPrecision precision = 1 [json_name = "precision"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetCurrentTimestampRequest, _impl_.precision_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(GetCurrentTimestampRequest, _impl_.precision_)}},
    // string timezone = 2 [json_name = "timezone"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GetCurrentTimestampRequest, _impl_.timezone_)}},
    // string source = 3 [json_name = "source"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(GetCurrentTimestampRequest, _impl_.source_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .timestamp.v1.TimestampPrecision precision = 1 [json_name = "precision"];
    {PROTOBUF_FIELD_OFFSET(GetCurrentTimestampRequest, _impl_.precision_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string timezone = 2 [json_name = "timezone"];
    {PROTOBUF_FIELD_OFFSET(GetCurrentTimestampRequest, _impl_.timezone_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string source = 3 [json_name = "source"];
    {PROTOBUF_FIELD_OFFSET(GetCurrentTimestampRequest, _impl_.source_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\0\10\6\0\0\0\0"
    "timestamp.v1.GetCurrentTimestampRequest"
    "timezone"
    "source"
  }},
};
PROTOBUF_NOINLINE void GetCurrentTimestampRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:timestamp.v1.GetCurrentTimestampRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.timezone_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.source_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.precision_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetCurrentTimestampRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetCurrentTimestampRequest& this_ = static_cast<const GetCurrentTimestampRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetCurrentTimestampRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetCurrentTimestampRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:timestamp.v1.GetCurrentTimestampRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .timestamp.v1.TimestampPrecision precision = 1 [json_name = "precision"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_precision() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_precision(), target);
    }
  }

  // string timezone = 2 [json_name = "timezone"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_timezone().empty()) {
      const ::std::string& _s = this_._internal_timezone();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "timestamp.v1.GetCurrentTimestampRequest.timezone");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string source = 3 [json_name = "source"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_source().empty()) {
      const ::std::string& _s = this_._internal_source();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "timestamp.v1.GetCurrentTimestampRequest.source");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:timestamp.v1.GetCurrentTimestampRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetCurrentTimestampRequest::ByteSizeLong(const MessageLite& base) {
  const GetCurrentTimestampRequest& this_ = static_cast<const GetCurrentTimestampRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetCurrentTimestampRequest::ByteSizeLong() const {
  const GetCurrentTimestampRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:timestamp.v1.GetCurrentTimestampRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string timezone = 2 [json_name = "timezone"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_timezone().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_timezone());
      }
    }
    // string source = 3 [json_name = "source"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_source().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_source());
      }
    }
    // .timestamp.v1.TimestampPrecision precision = 1 [json_name = "precision"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_precision() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_precision());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetCurrentTimestampRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetCurrentTimestampRequest*>(&to_msg);
  auto& from = static_cast<const GetCurrentTimestampRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:timestamp.v1.GetCurrentTimestampRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_timezone().empty()) {
        _this->_internal_set_timezone(from._internal_timezone());
      } else {
        if (_this->_impl_.timezone_.IsDefault()) {
          _this->_internal_set_timezone("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_source().empty()) {
        _this->_internal_set_source(from._internal_source());
      } else {
        if (_this->_impl_.source_.IsDefault()) {
          _this->_internal_set_source("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_precision() != 0) {
        _this->_impl_.precision_ = from._impl_.precision_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetCurrentTimestampRequest::CopyFrom(const GetCurrentTimestampRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:timestamp.v1.GetCurrentTimestampRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetCurrentTimestampRequest::InternalSwap(GetCurrentTimestampRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timezone_, &other->_impl_.timezone_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_, &other->_impl_.source_, arena);
  swap(_impl_.precision_, other->_impl_.precision_);
}

::google::protobuf::Metadata GetCurrentTimestampRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetCurrentTimestampResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetCurrentTimestampResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetCurrentTimestampResponse, _impl_._has_bits_);
};

GetCurrentTimestampResponse::GetCurrentTimestampResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetCurrentTimestampResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:timestamp.v1.GetCurrentTimestampResponse)
}
PROTOBUF_NDEBUG_INLINE GetCurrentTimestampResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::timestamp::v1::GetCurrentTimestampResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetCurrentTimestampResponse::GetCurrentTimestampResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetCurrentTimestampResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetCurrentTimestampResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetCurrentTimestampResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_message_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_message_)
                : nullptr;
  _impl_.processing_time_ns_ = from._impl_.processing_time_ns_;

  // @@protoc_insertion_point(copy_constructor:timestamp.v1.GetCurrentTimestampResponse)
}
PROTOBUF_NDEBUG_INLINE GetCurrentTimestampResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetCurrentTimestampResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_message_),
           0,
           offsetof(Impl_, processing_time_ns_) -
               offsetof(Impl_, timestamp_message_) +
               sizeof(Impl_::processing_time_ns_));
}
GetCurrentTimestampResponse::~GetCurrentTimestampResponse() {
  // @@protoc_insertion_point(destructor:timestamp.v1.GetCurrentTimestampResponse)
  SharedDtor(*this);
}
inline void GetCurrentTimestampResponse::SharedDtor(MessageLite& self) {
  GetCurrentTimestampResponse& this_ = static_cast<GetCurrentTimestampResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.timestamp_message_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetCurrentTimestampResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetCurrentTimestampResponse(arena);
}
constexpr auto GetCurrentTimestampResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetCurrentTimestampResponse),
                                            alignof(GetCurrentTimestampResponse));
}
constexpr auto GetCurrentTimestampResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetCurrentTimestampResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetCurrentTimestampResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetCurrentTimestampResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetCurrentTimestampResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetCurrentTimestampResponse>(), &GetCurrentTimestampResponse::ByteSizeLong,
              &GetCurrentTimestampResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetCurrentTimestampResponse, _impl_._cached_size_),
          false,
      },
      &GetCurrentTimestampResponse::kDescriptorMethods,
      &descriptor_table_timestamp_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetCurrentTimestampResponse_class_data_ =
        GetCurrentTimestampResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetCurrentTimestampResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetCurrentTimestampResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetCurrentTimestampResponse_class_data_.tc_table);
  return GetCurrentTimestampResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
GetCurrentTimestampResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetCurrentTimestampResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetCurrentTimestampResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::timestamp::v1::GetCurrentTimestampResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 processing_time_ns = 2 [json_name = "processingTimeNs"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetCurrentTimestampResponse, _impl_.processing_time_ns_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(GetCurrentTimestampResponse, _impl_.processing_time_ns_)}},
    // .timestamp.v1.TimestampMessage timestamp_message = 1 [json_name = "timestampMessage"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetCurrentTimestampResponse, _impl_.timestamp_message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .timestamp.v1.TimestampMessage timestamp_message = 1 [json_name = "timestampMessage"];
    {PROTOBUF_FIELD_OFFSET(GetCurrentTimestampResponse, _impl_.timestamp_message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 processing_time_ns = 2 [json_name = "processingTimeNs"];
    {PROTOBUF_FIELD_OFFSET(GetCurrentTimestampResponse, _impl_.processing_time_ns_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::timestamp::v1::TimestampMessage>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetCurrentTimestampResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:timestamp.v1.GetCurrentTimestampResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.timestamp_message_ != nullptr);
    _impl_.timestamp_message_->Clear();
  }
  _impl_.processing_time_ns_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetCurrentTimestampResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetCurrentTimestampResponse& this_ = static_cast<const GetCurrentTimestampResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetCurrentTimestampResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetCurrentTimestampResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:timestamp.v1.GetCurrentTimestampResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .timestamp.v1.TimestampMessage timestamp_message = 1 [json_name = "timestampMessage"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.timestamp_message_, this_._impl_.timestamp_message_->GetCachedSize(), target,
        stream);
  }

  // int64 processing_time_ns = 2 [json_name = "processingTimeNs"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (this_._internal_processing_time_ns() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_processing_time_ns(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:timestamp.v1.GetCurrentTimestampResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetCurrentTimestampResponse::ByteSizeLong(const MessageLite& base) {
  const GetCurrentTimestampResponse& this_ = static_cast<const GetCurrentTimestampResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetCurrentTimestampResponse::ByteSizeLong() const {
  const GetCurrentTimestampResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:timestamp.v1.GetCurrentTimestampResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .timestamp.v1.TimestampMessage timestamp_message = 1 [json_name = "timestampMessage"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_message_);
    }
    // int64 processing_time_ns = 2 [json_name = "processingTimeNs"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_processing_time_ns() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_processing_time_ns());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetCurrentTimestampResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetCurrentTimestampResponse*>(&to_msg);
  auto& from = static_cast<const GetCurrentTimestampResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:timestamp.v1.GetCurrentTimestampResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_message_ != nullptr);
      if (_this->_impl_.timestamp_message_ == nullptr) {
        _this->_impl_.timestamp_message_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_message_);
      } else {
        _this->_impl_.timestamp_message_->MergeFrom(*from._impl_.timestamp_message_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_processing_time_ns() != 0) {
        _this->_impl_.processing_time_ns_ = from._impl_.processing_time_ns_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetCurrentTimestampResponse::CopyFrom(const GetCurrentTimestampResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:timestamp.v1.GetCurrentTimestampResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetCurrentTimestampResponse::InternalSwap(GetCurrentTimestampResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetCurrentTimestampResponse, _impl_.processing_time_ns_)
      + sizeof(GetCurrentTimestampResponse::_impl_.processing_time_ns_)
      - PROTOBUF_FIELD_OFFSET(GetCurrentTimestampResponse, _impl_.timestamp_message_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_message_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_message_));
}

::google::protobuf::Metadata GetCurrentTimestampResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StreamTimestampsRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<StreamTimestampsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StreamTimestampsRequest, _impl_._has_bits_);
};

StreamTimestampsRequest::StreamTimestampsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StreamTimestampsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:timestamp.v1.StreamTimestampsRequest)
}
PROTOBUF_NDEBUG_INLINE StreamTimestampsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::timestamp::v1::StreamTimestampsRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        timezone_(arena, from.timezone_),
        source_(arena, from.source_) {}

StreamTimestampsRequest::StreamTimestampsRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const StreamTimestampsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StreamTimestampsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StreamTimestampsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, interval_ms_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, interval_ms_),
           offsetof(Impl_, precision_) -
               offsetof(Impl_, interval_ms_) +
               sizeof(Impl_::precision_));

  // @@protoc_insertion_point(copy_constructor:timestamp.v1.StreamTimestampsRequest)
}
PROTOBUF_NDEBUG_INLINE StreamTimestampsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        timezone_(arena),
        source_(arena) {}

inline void StreamTimestampsRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, interval_ms_),
           0,
           offsetof(Impl_, precision_) -
               offsetof(Impl_, interval_ms_) +
               sizeof(Impl_::precision_));
}
StreamTimestampsRequest::~StreamTimestampsRequest() {
  // @@protoc_insertion_point(destructor:timestamp.v1.StreamTimestampsRequest)
  SharedDtor(*this);
}
inline void StreamTimestampsRequest::SharedDtor(MessageLite& self) {
  StreamTimestampsRequest& this_ = static_cast<StreamTimestampsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.timezone_.Destroy();
  this_._impl_.source_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL StreamTimestampsRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) StreamTimestampsRequest(arena);
}
constexpr auto StreamTimestampsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(StreamTimestampsRequest),
                                            alignof(StreamTimestampsRequest));
}
constexpr auto StreamTimestampsRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_StreamTimestampsRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &StreamTimestampsRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<StreamTimestampsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &StreamTimestampsRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<StreamTimestampsRequest>(), &StreamTimestampsRequest::ByteSizeLong,
              &StreamTimestampsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(StreamTimestampsRequest, _impl_._cached_size_),
          false,
      },
      &StreamTimestampsRequest::kDescriptorMethods,
      &descriptor_table_timestamp_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull StreamTimestampsRequest_class_data_ =
        StreamTimestampsRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
StreamTimestampsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&StreamTimestampsRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(StreamTimestampsRequest_class_data_.tc_table);
  return StreamTimestampsRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 59, 2>
StreamTimestampsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StreamTimestampsRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    StreamTimestampsRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::timestamp::v1::StreamTimestampsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 interval_ms = 1 [json_name = "intervalMs"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StreamTimestampsRequest, _impl_.interval_ms_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(StreamTimestampsRequest, _impl_.interval_ms_)}},
    // int32 max_count = 2 [json_name = "maxCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StreamTimestampsRequest, _impl_.max_count_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(StreamTimestampsRequest, _impl_.max_count_)}},
    // .timestamp.v1.TimestampPrecision precision = 3 [json_name = "precision"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StreamTimestampsRequest, _impl_.precision_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(StreamTimestampsRequest, _impl_.precision_)}},
    // string timezone = 4 [json_name = "timezone"];
    {::_pbi::TcParser::FastUS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(StreamTimestampsRequest, _impl_.timezone_)}},
    // string source = 5 [json_name = "source"];
    {::_pbi::TcParser::FastUS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(StreamTimestampsRequest, _impl_.source_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 interval_ms = 1 [json_name = "intervalMs"];
    {PROTOBUF_FIELD_OFFSET(StreamTimestampsRequest, _impl_.interval_ms_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 max_count = 2 [json_name = "maxCount"];
    {PROTOBUF_FIELD_OFFSET(StreamTimestampsRequest, _impl_.max_count_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .timestamp.v1.TimestampPrecision precision = 3 [json_name = "precision"];
    {PROTOBUF_FIELD_OFFSET(StreamTimestampsRequest, _impl_.precision_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string timezone = 4 [json_name = "timezone"];
    {PROTOBUF_FIELD_OFFSET(StreamTimestampsRequest, _impl_.timezone_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string source = 5 [json_name = "source"];
    {PROTOBUF_FIELD_OFFSET(StreamTimestampsRequest, _impl_.source_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\0\0\0\10\6\0\0"
    "timestamp.v1.StreamTimestampsRequest"
    "timezone"
    "source"
  }},
};
PROTOBUF_NOINLINE void StreamTimestampsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:timestamp.v1.StreamTimestampsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.timezone_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.source_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000001cu) != 0) {
    ::memset(&_impl_.interval_ms_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.precision_) -
        reinterpret_cast<char*>(&_impl_.interval_ms_)) + sizeof(_impl_.precision_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL StreamTimestampsRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const StreamTimestampsRequest& this_ = static_cast<const StreamTimestampsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL StreamTimestampsRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const StreamTimestampsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:timestamp.v1.StreamTimestampsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 interval_ms = 1 [json_name = "intervalMs"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_interval_ms() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_interval_ms(), target);
    }
  }

  // int32 max_count = 2 [json_name = "maxCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_max_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_max_count(), target);
    }
  }

  // .timestamp.v1.TimestampPrecision precision = 3 [json_name = "precision"];
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_precision() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_precision(), target);
    }
  }

  // string timezone = 4 [json_name = "timezone"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_timezone().empty()) {
      const ::std::string& _s = this_._internal_timezone();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "timestamp.v1.StreamTimestampsRequest.timezone");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // string source = 5 [json_name = "source"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_source().empty()) {
      const ::std::string& _s = this_._internal_source();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "timestamp.v1.StreamTimestampsRequest.source");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:timestamp.v1.StreamTimestampsRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t StreamTimestampsRequest::ByteSizeLong(const MessageLite& base) {
  const StreamTimestampsRequest& this_ = static_cast<const StreamTimestampsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t StreamTimestampsRequest::ByteSizeLong() const {
  const StreamTimestampsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:timestamp.v1.StreamTimestampsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // string timezone = 4 [json_name = "timezone"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_timezone().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_timezone());
      }
    }
    // string source = 5 [json_name = "source"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_source().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_source());
      }
    }
    // int32 interval_ms = 1 [json_name = "intervalMs"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_interval_ms() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_interval_ms());
      }
    }
    // int32 max_count = 2 [json_name = "maxCount"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_max_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_max_count());
      }
    }
    // .timestamp.v1.TimestampPrecision precision = 3 [json_name = "precision"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_precision() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_precision());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void StreamTimestampsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StreamTimestampsRequest*>(&to_msg);
  auto& from = static_cast<const StreamTimestampsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:timestamp.v1.StreamTimestampsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_timezone().empty()) {
        _this->_internal_set_timezone(from._internal_timezone());
      } else {
        if (_this->_impl_.timezone_.IsDefault()) {
          _this->_internal_set_timezone("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_source().empty()) {
        _this->_internal_set_source(from._internal_source());
      } else {
        if (_this->_impl_.source_.IsDefault()) {
          _this->_internal_set_source("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_interval_ms() != 0) {
        _this->_impl_.interval_ms_ = from._impl_.interval_ms_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_max_count() != 0) {
        _this->_impl_.max_count_ = from._impl_.max_count_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_precision() != 0) {
        _this->_impl_.precision_ = from._impl_.precision_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StreamTimestampsRequest::CopyFrom(const StreamTimestampsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:timestamp.v1.StreamTimestampsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StreamTimestampsRequest::InternalSwap(StreamTimestampsRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timezone_, &other->_impl_.timezone_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_, &other->_impl_.source_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StreamTimestampsRequest, _impl_.precision_)
      + sizeof(StreamTimestampsRequest::_impl_.precision_)
      - PROTOBUF_FIELD_OFFSET(StreamTimestampsRequest, _impl_.interval_ms_)>(
          reinterpret_cast<char*>(&_impl_.interval_ms_),
          reinterpret_cast<char*>(&other->_impl_.interval_ms_));
}

::google::protobuf::Metadata StreamTimestampsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace timestamp
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_timestamp_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
