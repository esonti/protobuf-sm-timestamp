// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: timestamp.proto
// Protobuf C++ Version: 6.31.1

#ifndef timestamp_2eproto_2epb_2eh
#define timestamp_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_timestamp_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_timestamp_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_timestamp_2eproto;
}  // extern "C"
namespace timestamp {
namespace v1 {
enum TimestampPrecision : int;
extern const uint32_t TimestampPrecision_internal_data_[];
class GetCurrentTimestampRequest;
struct GetCurrentTimestampRequestDefaultTypeInternal;
extern GetCurrentTimestampRequestDefaultTypeInternal _GetCurrentTimestampRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetCurrentTimestampRequest_class_data_;
class GetCurrentTimestampResponse;
struct GetCurrentTimestampResponseDefaultTypeInternal;
extern GetCurrentTimestampResponseDefaultTypeInternal _GetCurrentTimestampResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetCurrentTimestampResponse_class_data_;
class StreamTimestampsRequest;
struct StreamTimestampsRequestDefaultTypeInternal;
extern StreamTimestampsRequestDefaultTypeInternal _StreamTimestampsRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull StreamTimestampsRequest_class_data_;
class TimestampMessage;
struct TimestampMessageDefaultTypeInternal;
extern TimestampMessageDefaultTypeInternal _TimestampMessage_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull TimestampMessage_class_data_;
}  // namespace v1
}  // namespace timestamp
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::timestamp::v1::TimestampPrecision_internal_data_>
    internal::EnumTraitsImpl::value<::timestamp::v1::TimestampPrecision>;
}  // namespace protobuf
}  // namespace google

namespace timestamp {
namespace v1 {
enum TimestampPrecision : int {
  TIMESTAMP_PRECISION_UNSPECIFIED = 0,
  TIMESTAMP_PRECISION_SECONDS = 1,
  TIMESTAMP_PRECISION_MILLISECONDS = 2,
  TIMESTAMP_PRECISION_MICROSECONDS = 3,
  TIMESTAMP_PRECISION_NANOSECONDS = 4,
  TimestampPrecision_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  TimestampPrecision_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t TimestampPrecision_internal_data_[];
inline constexpr TimestampPrecision TimestampPrecision_MIN =
    static_cast<TimestampPrecision>(0);
inline constexpr TimestampPrecision TimestampPrecision_MAX =
    static_cast<TimestampPrecision>(4);
inline bool TimestampPrecision_IsValid(int value) {
  return 0 <= value && value <= 4;
}
inline constexpr int TimestampPrecision_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL TimestampPrecision_descriptor();
template <typename T>
const ::std::string& TimestampPrecision_Name(T value) {
  static_assert(::std::is_same<T, TimestampPrecision>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to TimestampPrecision_Name().");
  return TimestampPrecision_Name(static_cast<TimestampPrecision>(value));
}
template <>
inline const ::std::string& TimestampPrecision_Name(TimestampPrecision value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TimestampPrecision_descriptor, 0, 4>(
      static_cast<int>(value));
}
inline bool TimestampPrecision_Parse(
    ::absl::string_view name, TimestampPrecision* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<TimestampPrecision>(TimestampPrecision_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class StreamTimestampsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:timestamp.v1.StreamTimestampsRequest) */ {
 public:
  inline StreamTimestampsRequest() : StreamTimestampsRequest(nullptr) {}
  ~StreamTimestampsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StreamTimestampsRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StreamTimestampsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StreamTimestampsRequest(::google::protobuf::internal::ConstantInitialized);

  inline StreamTimestampsRequest(const StreamTimestampsRequest& from) : StreamTimestampsRequest(nullptr, from) {}
  inline StreamTimestampsRequest(StreamTimestampsRequest&& from) noexcept
      : StreamTimestampsRequest(nullptr, ::std::move(from)) {}
  inline StreamTimestampsRequest& operator=(const StreamTimestampsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamTimestampsRequest& operator=(StreamTimestampsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StreamTimestampsRequest& default_instance() {
    return *reinterpret_cast<const StreamTimestampsRequest*>(
        &_StreamTimestampsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(StreamTimestampsRequest& a, StreamTimestampsRequest& b) { a.Swap(&b); }
  inline void Swap(StreamTimestampsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamTimestampsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StreamTimestampsRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StreamTimestampsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StreamTimestampsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StreamTimestampsRequest& from) { StreamTimestampsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StreamTimestampsRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "timestamp.v1.StreamTimestampsRequest"; }

 protected:
  explicit StreamTimestampsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  StreamTimestampsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const StreamTimestampsRequest& from);
  StreamTimestampsRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, StreamTimestampsRequest&& from) noexcept
      : StreamTimestampsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimezoneFieldNumber = 4,
    kSourceFieldNumber = 5,
    kIntervalMsFieldNumber = 1,
    kMaxCountFieldNumber = 2,
    kPrecisionFieldNumber = 3,
  };
  // string timezone = 4 [json_name = "timezone"];
  void clear_timezone() ;
  const ::std::string& timezone() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_timezone(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_timezone();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_timezone();
  void set_allocated_timezone(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_timezone() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_timezone(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_timezone();

  public:
  // string source = 5 [json_name = "source"];
  void clear_source() ;
  const ::std::string& source() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_source(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_source();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_source();
  void set_allocated_source(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_source() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_source(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_source();

  public:
  // int32 interval_ms = 1 [json_name = "intervalMs"];
  void clear_interval_ms() ;
  ::int32_t interval_ms() const;
  void set_interval_ms(::int32_t value);

  private:
  ::int32_t _internal_interval_ms() const;
  void _internal_set_interval_ms(::int32_t value);

  public:
  // int32 max_count = 2 [json_name = "maxCount"];
  void clear_max_count() ;
  ::int32_t max_count() const;
  void set_max_count(::int32_t value);

  private:
  ::int32_t _internal_max_count() const;
  void _internal_set_max_count(::int32_t value);

  public:
  // .timestamp.v1.TimestampPrecision precision = 3 [json_name = "precision"];
  void clear_precision() ;
  ::timestamp::v1::TimestampPrecision precision() const;
  void set_precision(::timestamp::v1::TimestampPrecision value);

  private:
  ::timestamp::v1::TimestampPrecision _internal_precision() const;
  void _internal_set_precision(::timestamp::v1::TimestampPrecision value);

  public:
  // @@protoc_insertion_point(class_scope:timestamp.v1.StreamTimestampsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   0, 59,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const StreamTimestampsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr timezone_;
    ::google::protobuf::internal::ArenaStringPtr source_;
    ::int32_t interval_ms_;
    ::int32_t max_count_;
    int precision_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_timestamp_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull StreamTimestampsRequest_class_data_;
// -------------------------------------------------------------------

class GetCurrentTimestampRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:timestamp.v1.GetCurrentTimestampRequest) */ {
 public:
  inline GetCurrentTimestampRequest() : GetCurrentTimestampRequest(nullptr) {}
  ~GetCurrentTimestampRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetCurrentTimestampRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetCurrentTimestampRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetCurrentTimestampRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetCurrentTimestampRequest(const GetCurrentTimestampRequest& from) : GetCurrentTimestampRequest(nullptr, from) {}
  inline GetCurrentTimestampRequest(GetCurrentTimestampRequest&& from) noexcept
      : GetCurrentTimestampRequest(nullptr, ::std::move(from)) {}
  inline GetCurrentTimestampRequest& operator=(const GetCurrentTimestampRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCurrentTimestampRequest& operator=(GetCurrentTimestampRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCurrentTimestampRequest& default_instance() {
    return *reinterpret_cast<const GetCurrentTimestampRequest*>(
        &_GetCurrentTimestampRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GetCurrentTimestampRequest& a, GetCurrentTimestampRequest& b) { a.Swap(&b); }
  inline void Swap(GetCurrentTimestampRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCurrentTimestampRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCurrentTimestampRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetCurrentTimestampRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCurrentTimestampRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetCurrentTimestampRequest& from) { GetCurrentTimestampRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetCurrentTimestampRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "timestamp.v1.GetCurrentTimestampRequest"; }

 protected:
  explicit GetCurrentTimestampRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetCurrentTimestampRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetCurrentTimestampRequest& from);
  GetCurrentTimestampRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetCurrentTimestampRequest&& from) noexcept
      : GetCurrentTimestampRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimezoneFieldNumber = 2,
    kSourceFieldNumber = 3,
    kPrecisionFieldNumber = 1,
  };
  // string timezone = 2 [json_name = "timezone"];
  void clear_timezone() ;
  const ::std::string& timezone() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_timezone(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_timezone();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_timezone();
  void set_allocated_timezone(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_timezone() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_timezone(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_timezone();

  public:
  // string source = 3 [json_name = "source"];
  void clear_source() ;
  const ::std::string& source() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_source(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_source();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_source();
  void set_allocated_source(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_source() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_source(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_source();

  public:
  // .timestamp.v1.TimestampPrecision precision = 1 [json_name = "precision"];
  void clear_precision() ;
  ::timestamp::v1::TimestampPrecision precision() const;
  void set_precision(::timestamp::v1::TimestampPrecision value);

  private:
  ::timestamp::v1::TimestampPrecision _internal_precision() const;
  void _internal_set_precision(::timestamp::v1::TimestampPrecision value);

  public:
  // @@protoc_insertion_point(class_scope:timestamp.v1.GetCurrentTimestampRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 62,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetCurrentTimestampRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr timezone_;
    ::google::protobuf::internal::ArenaStringPtr source_;
    int precision_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_timestamp_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetCurrentTimestampRequest_class_data_;
// -------------------------------------------------------------------

class TimestampMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:timestamp.v1.TimestampMessage) */ {
 public:
  inline TimestampMessage() : TimestampMessage(nullptr) {}
  ~TimestampMessage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TimestampMessage* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TimestampMessage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TimestampMessage(::google::protobuf::internal::ConstantInitialized);

  inline TimestampMessage(const TimestampMessage& from) : TimestampMessage(nullptr, from) {}
  inline TimestampMessage(TimestampMessage&& from) noexcept
      : TimestampMessage(nullptr, ::std::move(from)) {}
  inline TimestampMessage& operator=(const TimestampMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TimestampMessage& operator=(TimestampMessage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TimestampMessage& default_instance() {
    return *reinterpret_cast<const TimestampMessage*>(
        &_TimestampMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TimestampMessage& a, TimestampMessage& b) { a.Swap(&b); }
  inline void Swap(TimestampMessage* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TimestampMessage* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TimestampMessage* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TimestampMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TimestampMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TimestampMessage& from) { TimestampMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TimestampMessage* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "timestamp.v1.TimestampMessage"; }

 protected:
  explicit TimestampMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TimestampMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TimestampMessage& from);
  TimestampMessage(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TimestampMessage&& from) noexcept
      : TimestampMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSourceFieldNumber = 2,
    kMessageFieldNumber = 3,
    kTimezoneFieldNumber = 4,
    kTimestampFieldNumber = 1,
    kPrecisionFieldNumber = 5,
  };
  // string source = 2 [json_name = "source"];
  void clear_source() ;
  const ::std::string& source() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_source(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_source();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_source();
  void set_allocated_source(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_source() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_source(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_source();

  public:
  // string message = 3 [json_name = "message"];
  void clear_message() ;
  const ::std::string& message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_message();
  void set_allocated_message(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_message();

  public:
  // string timezone = 4 [json_name = "timezone"];
  void clear_timezone() ;
  const ::std::string& timezone() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_timezone(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_timezone();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_timezone();
  void set_allocated_timezone(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_timezone() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_timezone(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_timezone();

  public:
  // .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_timestamp();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_timestamp();

  public:
  // .timestamp.v1.TimestampPrecision precision = 5 [json_name = "precision"];
  void clear_precision() ;
  ::timestamp::v1::TimestampPrecision precision() const;
  void set_precision(::timestamp::v1::TimestampPrecision value);

  private:
  ::timestamp::v1::TimestampPrecision _internal_precision() const;
  void _internal_set_precision(::timestamp::v1::TimestampPrecision value);

  public:
  // @@protoc_insertion_point(class_scope:timestamp.v1.TimestampMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   1, 59,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TimestampMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr source_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::google::protobuf::internal::ArenaStringPtr timezone_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE timestamp_;
    int precision_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_timestamp_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull TimestampMessage_class_data_;
// -------------------------------------------------------------------

class GetCurrentTimestampResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:timestamp.v1.GetCurrentTimestampResponse) */ {
 public:
  inline GetCurrentTimestampResponse() : GetCurrentTimestampResponse(nullptr) {}
  ~GetCurrentTimestampResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetCurrentTimestampResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetCurrentTimestampResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetCurrentTimestampResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetCurrentTimestampResponse(const GetCurrentTimestampResponse& from) : GetCurrentTimestampResponse(nullptr, from) {}
  inline GetCurrentTimestampResponse(GetCurrentTimestampResponse&& from) noexcept
      : GetCurrentTimestampResponse(nullptr, ::std::move(from)) {}
  inline GetCurrentTimestampResponse& operator=(const GetCurrentTimestampResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCurrentTimestampResponse& operator=(GetCurrentTimestampResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCurrentTimestampResponse& default_instance() {
    return *reinterpret_cast<const GetCurrentTimestampResponse*>(
        &_GetCurrentTimestampResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetCurrentTimestampResponse& a, GetCurrentTimestampResponse& b) { a.Swap(&b); }
  inline void Swap(GetCurrentTimestampResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCurrentTimestampResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCurrentTimestampResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetCurrentTimestampResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCurrentTimestampResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetCurrentTimestampResponse& from) { GetCurrentTimestampResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetCurrentTimestampResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "timestamp.v1.GetCurrentTimestampResponse"; }

 protected:
  explicit GetCurrentTimestampResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetCurrentTimestampResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetCurrentTimestampResponse& from);
  GetCurrentTimestampResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetCurrentTimestampResponse&& from) noexcept
      : GetCurrentTimestampResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimestampMessageFieldNumber = 1,
    kProcessingTimeNsFieldNumber = 2,
  };
  // .timestamp.v1.TimestampMessage timestamp_message = 1 [json_name = "timestampMessage"];
  bool has_timestamp_message() const;
  void clear_timestamp_message() ;
  const ::timestamp::v1::TimestampMessage& timestamp_message() const;
  [[nodiscard]] ::timestamp::v1::TimestampMessage* PROTOBUF_NULLABLE release_timestamp_message();
  ::timestamp::v1::TimestampMessage* PROTOBUF_NONNULL mutable_timestamp_message();
  void set_allocated_timestamp_message(::timestamp::v1::TimestampMessage* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_timestamp_message(::timestamp::v1::TimestampMessage* PROTOBUF_NULLABLE value);
  ::timestamp::v1::TimestampMessage* PROTOBUF_NULLABLE unsafe_arena_release_timestamp_message();

  private:
  const ::timestamp::v1::TimestampMessage& _internal_timestamp_message() const;
  ::timestamp::v1::TimestampMessage* PROTOBUF_NONNULL _internal_mutable_timestamp_message();

  public:
  // int64 processing_time_ns = 2 [json_name = "processingTimeNs"];
  void clear_processing_time_ns() ;
  ::int64_t processing_time_ns() const;
  void set_processing_time_ns(::int64_t value);

  private:
  ::int64_t _internal_processing_time_ns() const;
  void _internal_set_processing_time_ns(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:timestamp.v1.GetCurrentTimestampResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetCurrentTimestampResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::timestamp::v1::TimestampMessage* PROTOBUF_NULLABLE timestamp_message_;
    ::int64_t processing_time_ns_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_timestamp_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetCurrentTimestampResponse_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TimestampMessage

// .google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp"];
inline bool TimestampMessage::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& TimestampMessage::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& TimestampMessage::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:timestamp.v1.TimestampMessage.timestamp)
  return _internal_timestamp();
}
inline void TimestampMessage::unsafe_arena_set_allocated_timestamp(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:timestamp.v1.TimestampMessage.timestamp)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE TimestampMessage::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE TimestampMessage::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:timestamp.v1.TimestampMessage.timestamp)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL TimestampMessage::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL TimestampMessage::mutable_timestamp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:timestamp.v1.TimestampMessage.timestamp)
  return _msg;
}
inline void TimestampMessage::set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:timestamp.v1.TimestampMessage.timestamp)
}

// string source = 2 [json_name = "source"];
inline void TimestampMessage::clear_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& TimestampMessage::source() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:timestamp.v1.TimestampMessage.source)
  return _internal_source();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void TimestampMessage::set_source(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.source_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:timestamp.v1.TimestampMessage.source)
}
inline ::std::string* PROTOBUF_NONNULL TimestampMessage::mutable_source()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_source();
  // @@protoc_insertion_point(field_mutable:timestamp.v1.TimestampMessage.source)
  return _s;
}
inline const ::std::string& TimestampMessage::_internal_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_.Get();
}
inline void TimestampMessage::_internal_set_source(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.source_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL TimestampMessage::_internal_mutable_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.source_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE TimestampMessage::release_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:timestamp.v1.TimestampMessage.source)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.source_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.source_.Set("", GetArena());
  }
  return released;
}
inline void TimestampMessage::set_allocated_source(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.source_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.source_.IsDefault()) {
    _impl_.source_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:timestamp.v1.TimestampMessage.source)
}

// string message = 3 [json_name = "message"];
inline void TimestampMessage::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& TimestampMessage::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:timestamp.v1.TimestampMessage.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void TimestampMessage::set_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:timestamp.v1.TimestampMessage.message)
}
inline ::std::string* PROTOBUF_NONNULL TimestampMessage::mutable_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:timestamp.v1.TimestampMessage.message)
  return _s;
}
inline const ::std::string& TimestampMessage::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void TimestampMessage::_internal_set_message(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL TimestampMessage::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.message_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE TimestampMessage::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:timestamp.v1.TimestampMessage.message)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.message_.Set("", GetArena());
  }
  return released;
}
inline void TimestampMessage::set_allocated_message(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:timestamp.v1.TimestampMessage.message)
}

// string timezone = 4 [json_name = "timezone"];
inline void TimestampMessage::clear_timezone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timezone_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& TimestampMessage::timezone() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:timestamp.v1.TimestampMessage.timezone)
  return _internal_timezone();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void TimestampMessage::set_timezone(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.timezone_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:timestamp.v1.TimestampMessage.timezone)
}
inline ::std::string* PROTOBUF_NONNULL TimestampMessage::mutable_timezone()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_timezone();
  // @@protoc_insertion_point(field_mutable:timestamp.v1.TimestampMessage.timezone)
  return _s;
}
inline const ::std::string& TimestampMessage::_internal_timezone() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timezone_.Get();
}
inline void TimestampMessage::_internal_set_timezone(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.timezone_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL TimestampMessage::_internal_mutable_timezone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.timezone_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE TimestampMessage::release_timezone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:timestamp.v1.TimestampMessage.timezone)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.timezone_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.timezone_.Set("", GetArena());
  }
  return released;
}
inline void TimestampMessage::set_allocated_timezone(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.timezone_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.timezone_.IsDefault()) {
    _impl_.timezone_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:timestamp.v1.TimestampMessage.timezone)
}

// .timestamp.v1.TimestampPrecision precision = 5 [json_name = "precision"];
inline void TimestampMessage::clear_precision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.precision_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::timestamp::v1::TimestampPrecision TimestampMessage::precision() const {
  // @@protoc_insertion_point(field_get:timestamp.v1.TimestampMessage.precision)
  return _internal_precision();
}
inline void TimestampMessage::set_precision(::timestamp::v1::TimestampPrecision value) {
  _internal_set_precision(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:timestamp.v1.TimestampMessage.precision)
}
inline ::timestamp::v1::TimestampPrecision TimestampMessage::_internal_precision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::timestamp::v1::TimestampPrecision>(_impl_.precision_);
}
inline void TimestampMessage::_internal_set_precision(::timestamp::v1::TimestampPrecision value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.precision_ = value;
}

// -------------------------------------------------------------------

// GetCurrentTimestampRequest

// .timestamp.v1.TimestampPrecision precision = 1 [json_name = "precision"];
inline void GetCurrentTimestampRequest::clear_precision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.precision_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::timestamp::v1::TimestampPrecision GetCurrentTimestampRequest::precision() const {
  // @@protoc_insertion_point(field_get:timestamp.v1.GetCurrentTimestampRequest.precision)
  return _internal_precision();
}
inline void GetCurrentTimestampRequest::set_precision(::timestamp::v1::TimestampPrecision value) {
  _internal_set_precision(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:timestamp.v1.GetCurrentTimestampRequest.precision)
}
inline ::timestamp::v1::TimestampPrecision GetCurrentTimestampRequest::_internal_precision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::timestamp::v1::TimestampPrecision>(_impl_.precision_);
}
inline void GetCurrentTimestampRequest::_internal_set_precision(::timestamp::v1::TimestampPrecision value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.precision_ = value;
}

// string timezone = 2 [json_name = "timezone"];
inline void GetCurrentTimestampRequest::clear_timezone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timezone_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& GetCurrentTimestampRequest::timezone() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:timestamp.v1.GetCurrentTimestampRequest.timezone)
  return _internal_timezone();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetCurrentTimestampRequest::set_timezone(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.timezone_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:timestamp.v1.GetCurrentTimestampRequest.timezone)
}
inline ::std::string* PROTOBUF_NONNULL GetCurrentTimestampRequest::mutable_timezone()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_timezone();
  // @@protoc_insertion_point(field_mutable:timestamp.v1.GetCurrentTimestampRequest.timezone)
  return _s;
}
inline const ::std::string& GetCurrentTimestampRequest::_internal_timezone() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timezone_.Get();
}
inline void GetCurrentTimestampRequest::_internal_set_timezone(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.timezone_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetCurrentTimestampRequest::_internal_mutable_timezone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.timezone_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetCurrentTimestampRequest::release_timezone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:timestamp.v1.GetCurrentTimestampRequest.timezone)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.timezone_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.timezone_.Set("", GetArena());
  }
  return released;
}
inline void GetCurrentTimestampRequest::set_allocated_timezone(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.timezone_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.timezone_.IsDefault()) {
    _impl_.timezone_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:timestamp.v1.GetCurrentTimestampRequest.timezone)
}

// string source = 3 [json_name = "source"];
inline void GetCurrentTimestampRequest::clear_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& GetCurrentTimestampRequest::source() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:timestamp.v1.GetCurrentTimestampRequest.source)
  return _internal_source();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetCurrentTimestampRequest::set_source(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.source_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:timestamp.v1.GetCurrentTimestampRequest.source)
}
inline ::std::string* PROTOBUF_NONNULL GetCurrentTimestampRequest::mutable_source()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_source();
  // @@protoc_insertion_point(field_mutable:timestamp.v1.GetCurrentTimestampRequest.source)
  return _s;
}
inline const ::std::string& GetCurrentTimestampRequest::_internal_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_.Get();
}
inline void GetCurrentTimestampRequest::_internal_set_source(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.source_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetCurrentTimestampRequest::_internal_mutable_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.source_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetCurrentTimestampRequest::release_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:timestamp.v1.GetCurrentTimestampRequest.source)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.source_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.source_.Set("", GetArena());
  }
  return released;
}
inline void GetCurrentTimestampRequest::set_allocated_source(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.source_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.source_.IsDefault()) {
    _impl_.source_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:timestamp.v1.GetCurrentTimestampRequest.source)
}

// -------------------------------------------------------------------

// GetCurrentTimestampResponse

// .timestamp.v1.TimestampMessage timestamp_message = 1 [json_name = "timestampMessage"];
inline bool GetCurrentTimestampResponse::has_timestamp_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_message_ != nullptr);
  return value;
}
inline void GetCurrentTimestampResponse::clear_timestamp_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_message_ != nullptr) _impl_.timestamp_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::timestamp::v1::TimestampMessage& GetCurrentTimestampResponse::_internal_timestamp_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::timestamp::v1::TimestampMessage* p = _impl_.timestamp_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::timestamp::v1::TimestampMessage&>(::timestamp::v1::_TimestampMessage_default_instance_);
}
inline const ::timestamp::v1::TimestampMessage& GetCurrentTimestampResponse::timestamp_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:timestamp.v1.GetCurrentTimestampResponse.timestamp_message)
  return _internal_timestamp_message();
}
inline void GetCurrentTimestampResponse::unsafe_arena_set_allocated_timestamp_message(
    ::timestamp::v1::TimestampMessage* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_message_);
  }
  _impl_.timestamp_message_ = reinterpret_cast<::timestamp::v1::TimestampMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:timestamp.v1.GetCurrentTimestampResponse.timestamp_message)
}
inline ::timestamp::v1::TimestampMessage* PROTOBUF_NULLABLE GetCurrentTimestampResponse::release_timestamp_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::timestamp::v1::TimestampMessage* released = _impl_.timestamp_message_;
  _impl_.timestamp_message_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::timestamp::v1::TimestampMessage* PROTOBUF_NULLABLE GetCurrentTimestampResponse::unsafe_arena_release_timestamp_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:timestamp.v1.GetCurrentTimestampResponse.timestamp_message)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::timestamp::v1::TimestampMessage* temp = _impl_.timestamp_message_;
  _impl_.timestamp_message_ = nullptr;
  return temp;
}
inline ::timestamp::v1::TimestampMessage* PROTOBUF_NONNULL GetCurrentTimestampResponse::_internal_mutable_timestamp_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::timestamp::v1::TimestampMessage>(GetArena());
    _impl_.timestamp_message_ = reinterpret_cast<::timestamp::v1::TimestampMessage*>(p);
  }
  return _impl_.timestamp_message_;
}
inline ::timestamp::v1::TimestampMessage* PROTOBUF_NONNULL GetCurrentTimestampResponse::mutable_timestamp_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::timestamp::v1::TimestampMessage* _msg = _internal_mutable_timestamp_message();
  // @@protoc_insertion_point(field_mutable:timestamp.v1.GetCurrentTimestampResponse.timestamp_message)
  return _msg;
}
inline void GetCurrentTimestampResponse::set_allocated_timestamp_message(::timestamp::v1::TimestampMessage* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.timestamp_message_ = reinterpret_cast<::timestamp::v1::TimestampMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:timestamp.v1.GetCurrentTimestampResponse.timestamp_message)
}

// int64 processing_time_ns = 2 [json_name = "processingTimeNs"];
inline void GetCurrentTimestampResponse::clear_processing_time_ns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.processing_time_ns_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t GetCurrentTimestampResponse::processing_time_ns() const {
  // @@protoc_insertion_point(field_get:timestamp.v1.GetCurrentTimestampResponse.processing_time_ns)
  return _internal_processing_time_ns();
}
inline void GetCurrentTimestampResponse::set_processing_time_ns(::int64_t value) {
  _internal_set_processing_time_ns(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:timestamp.v1.GetCurrentTimestampResponse.processing_time_ns)
}
inline ::int64_t GetCurrentTimestampResponse::_internal_processing_time_ns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.processing_time_ns_;
}
inline void GetCurrentTimestampResponse::_internal_set_processing_time_ns(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.processing_time_ns_ = value;
}

// -------------------------------------------------------------------

// StreamTimestampsRequest

// int32 interval_ms = 1 [json_name = "intervalMs"];
inline void StreamTimestampsRequest::clear_interval_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interval_ms_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t StreamTimestampsRequest::interval_ms() const {
  // @@protoc_insertion_point(field_get:timestamp.v1.StreamTimestampsRequest.interval_ms)
  return _internal_interval_ms();
}
inline void StreamTimestampsRequest::set_interval_ms(::int32_t value) {
  _internal_set_interval_ms(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:timestamp.v1.StreamTimestampsRequest.interval_ms)
}
inline ::int32_t StreamTimestampsRequest::_internal_interval_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interval_ms_;
}
inline void StreamTimestampsRequest::_internal_set_interval_ms(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interval_ms_ = value;
}

// int32 max_count = 2 [json_name = "maxCount"];
inline void StreamTimestampsRequest::clear_max_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_count_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t StreamTimestampsRequest::max_count() const {
  // @@protoc_insertion_point(field_get:timestamp.v1.StreamTimestampsRequest.max_count)
  return _internal_max_count();
}
inline void StreamTimestampsRequest::set_max_count(::int32_t value) {
  _internal_set_max_count(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:timestamp.v1.StreamTimestampsRequest.max_count)
}
inline ::int32_t StreamTimestampsRequest::_internal_max_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_count_;
}
inline void StreamTimestampsRequest::_internal_set_max_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_count_ = value;
}

// .timestamp.v1.TimestampPrecision precision = 3 [json_name = "precision"];
inline void StreamTimestampsRequest::clear_precision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.precision_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::timestamp::v1::TimestampPrecision StreamTimestampsRequest::precision() const {
  // @@protoc_insertion_point(field_get:timestamp.v1.StreamTimestampsRequest.precision)
  return _internal_precision();
}
inline void StreamTimestampsRequest::set_precision(::timestamp::v1::TimestampPrecision value) {
  _internal_set_precision(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:timestamp.v1.StreamTimestampsRequest.precision)
}
inline ::timestamp::v1::TimestampPrecision StreamTimestampsRequest::_internal_precision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::timestamp::v1::TimestampPrecision>(_impl_.precision_);
}
inline void StreamTimestampsRequest::_internal_set_precision(::timestamp::v1::TimestampPrecision value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.precision_ = value;
}

// string timezone = 4 [json_name = "timezone"];
inline void StreamTimestampsRequest::clear_timezone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timezone_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StreamTimestampsRequest::timezone() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:timestamp.v1.StreamTimestampsRequest.timezone)
  return _internal_timezone();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void StreamTimestampsRequest::set_timezone(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.timezone_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:timestamp.v1.StreamTimestampsRequest.timezone)
}
inline ::std::string* PROTOBUF_NONNULL StreamTimestampsRequest::mutable_timezone()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_timezone();
  // @@protoc_insertion_point(field_mutable:timestamp.v1.StreamTimestampsRequest.timezone)
  return _s;
}
inline const ::std::string& StreamTimestampsRequest::_internal_timezone() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timezone_.Get();
}
inline void StreamTimestampsRequest::_internal_set_timezone(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.timezone_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL StreamTimestampsRequest::_internal_mutable_timezone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.timezone_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE StreamTimestampsRequest::release_timezone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:timestamp.v1.StreamTimestampsRequest.timezone)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.timezone_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.timezone_.Set("", GetArena());
  }
  return released;
}
inline void StreamTimestampsRequest::set_allocated_timezone(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.timezone_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.timezone_.IsDefault()) {
    _impl_.timezone_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:timestamp.v1.StreamTimestampsRequest.timezone)
}

// string source = 5 [json_name = "source"];
inline void StreamTimestampsRequest::clear_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& StreamTimestampsRequest::source() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:timestamp.v1.StreamTimestampsRequest.source)
  return _internal_source();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void StreamTimestampsRequest::set_source(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.source_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:timestamp.v1.StreamTimestampsRequest.source)
}
inline ::std::string* PROTOBUF_NONNULL StreamTimestampsRequest::mutable_source()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_source();
  // @@protoc_insertion_point(field_mutable:timestamp.v1.StreamTimestampsRequest.source)
  return _s;
}
inline const ::std::string& StreamTimestampsRequest::_internal_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_.Get();
}
inline void StreamTimestampsRequest::_internal_set_source(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.source_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL StreamTimestampsRequest::_internal_mutable_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.source_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE StreamTimestampsRequest::release_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:timestamp.v1.StreamTimestampsRequest.source)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.source_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.source_.Set("", GetArena());
  }
  return released;
}
inline void StreamTimestampsRequest::set_allocated_source(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.source_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.source_.IsDefault()) {
    _impl_.source_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:timestamp.v1.StreamTimestampsRequest.source)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace timestamp


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::timestamp::v1::TimestampPrecision> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::timestamp::v1::TimestampPrecision>() {
  return ::timestamp::v1::TimestampPrecision_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // timestamp_2eproto_2epb_2eh
